<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_buttonone_stop</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Start Button


instance_create(x,y,obj_button_slide);
slide = true;           // SLIDE
alarm[0] = 179;         // STOP SLIDE
hasEntered = false;     // MOUSE
image_index = 13;       // COMECE NO ULTIMO FRAME DA SPRITE
p = 0;                  // MENSAGENS
e = 0;                  // DEFAULT ENTER OR LEAVE
hasPressed = false;
cooldown = 10;
playerID = 0;
/* (P) MENSAGENS: 
p0 = JOGAR
p1 = SAIR
p2 = TELA CHEIA
p3 = 2 jogadores
p4 = 3 jogadores
p5 = 4 jogadores
p6 = VOLTAR PARA TELA DE JOGAR
p7 = MAPA &gt;
p8 = ir selecionar mapa
p9 = VOLTAR PARA TELA DE INICIO
p11 = Tela DEBUG
p12 = CAMERA DEBUG
p13 = ZOOM DEBUG
p14 = MOVE DEBUG
p15 = 1 jogadore debug
p16 = 2 jogadore debug
p17 = 3 jogadore debug
p18 = 4 jogadore debug
p19 voltar
p20 = codigos debug
p21 = codigo camera
p22 = codigo andar
p23 = codigo joao
*/


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Motion Blur Variables
friction=0;
rotation=0;
blur=true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hasPressed = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>slide = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if slide == true {
x+=(obj_button_slide.x-x)/7;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///EXECUTE
scr_get_input();
if attack_key &amp;&amp; position_meeting(obj_pointer0.x,obj_pointer0.y,self) &amp;&amp; hasPressed == false {
    
   switch (p) {
case 0: room_goto(rm_jogar);  break;
case 1: game_end() break;
case 2: window_set_fullscreen(!window_get_fullscreen()); break;
case 3: room_goto(rm_2_jogadores);
        obj_global_handle.mp_mode = 0; break;
case 4: room_goto(rm_3_jogadores);
        obj_global_handle.mp_mode = 1; break;
case 5: room_goto(rm_4_jogadores);
        obj_global_handle.mp_mode = 2; break;
case 6:     switch (obj_global_handle.mp_mode) {
                case 0: room_goto(rm_2_jogadores); break;
                case 1: room_goto(rm_3_jogadores); break;
                case 2: room_goto(rm_4_jogadores); break;
        } break;


case 7: switch (obj_global_handle.map) {
    case 0: room_goto(rm_arena_0); break;
    case 1: room_goto(rm_arena_1); break;
    case 2: room_goto(rm_arena_2); break;
}

 
   break;
case 8: room_goto(rm_select_map0); break;
case 9: room_goto(rm_inicio); break;
case 10: room_goto(rm_jogar); break;
case 11: room_goto(rm_debug_select); break;
case 12: obj_global_handle.camera = 0; room_goto(rm_debug_camera); break;
case 13: obj_global_handle.camera = 1; room_goto(rm_debug_camera); break;
case 14: /**/ break;
case 15: obj_global_handle.debug = 0; room_goto(rm_debug_camera_play); break;
case 16: obj_global_handle.debug = 1; room_goto(rm_debug_camera_play); break;
case 17: obj_global_handle.debug = 2; room_goto(rm_debug_camera_play); break;
case 18: obj_global_handle.debug = 3; room_goto(rm_debug_camera_play); break;
case 19: room_goto(rm_debug_select); break;
case 20: room_goto(rm_debug_codigo); break;
case 21: room_goto(rm_debug_codigo_camera); break;
case 22: room_goto(rm_debug_codigo_andar); break;
case 23: room_goto(rm_debug_codigo_joao); break;
   }
   hasPressed = true; 
   alarm [1] = 10;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Change Sprite on Mouse Enter


//mouse enter
if position_meeting(obj_pointer0.x,obj_pointer0.y,self){
    hasEntered = true;
    
sprite_index = spr_buttonone_play;
image_speed = 1;
e = 1;
}

//mouse leave
if (!position_meeting(obj_pointer0.x,obj_pointer0.y,self) &amp;&amp; hasEntered){
    sprite_index = spr_buttonone_stop;
image_speed = 1;
e = 0;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Stop Animation
if sprite_index = spr_buttonone_stop
{
    image_index = image_number-1;
    image_speed = 0;
}


if sprite_index = spr_buttonone_play
{
    image_index = image_number-1;
    image_speed = 0;
}




</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///MOTION BLUR
if(blur)
scr_draw_motionblur(point_distance(x,y,xprevious,yprevious),point_direction(x,y,xprevious,yprevious),x,y,rotation);
else
draw_sprite_ext(sprite_index,image_index,x,y,image_xscale,image_yscale,image_angle,image_blend,image_alpha);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///DRAW

// VARIAVEIS INICIAIS -------------------|
draw_set_alpha(1);                     //|
draw_self();                           //|
draw_set_font(font_pixel_noir);        //|
draw_set_halign(fa_center);            //|
// --------------------------------------|



// LIGAR E DESLIGAR TEXTO ---------------|
switch (e)                             //|
{                                      //|
case 0: draw_set_colour(c_black) break;//|
case 1: draw_set_colour(c_white) break;//|
}                                      //|
// --------------------------------------|


// MENSAGENS CODIGO (P) ------------------------|
switch (p)                                    //|
{                                             //|
case 0: draw_text(x,y-26,"JOGAR"); break;      //|
case 1: draw_text(x,y-26,"SAIR"); break;       //|
case 2: draw_text(x,y-26,"TELA CHEIA"); break; //|
case 3: draw_text(x,y-26,"2 JOGADORES"); break;//|
case 4: draw_text(x,y-26,"3 JOGADORES"); break;//|
case 5: draw_text(x,y-26,"4 JOGADORES"); break;//|
case 6: draw_text(x,y-26,"&lt; VOLTAR"); break;   //|
case 7: draw_text(x,y-26,"JOGAR"); break;      //|
case 8: draw_text(x,y-26,"MAPAS &gt;"); break;    //|
case 9: draw_text(x,y-26,"&lt; VOLTAR"); break;   //|
case 10: draw_text(x,y-26,"&lt; VOLTAR"); break;  //|
case 11: draw_text(x,y-26,"SHOW"); break;     //|
case 12: draw_text(x,y-26,"CAMERA"); break;     //|
case 13: draw_text(x,y-26,"ZOOM"); break;     //|
case 14: draw_text(x,y-26,"MOVE"); break;     //|
case 15: draw_text(x,y-26,"1 JOGADORES"); break;//|
case 16: draw_text(x,y-26,"2 JOGADORES"); break;//|
case 17: draw_text(x,y-26,"3 JOGADORES"); break;//|
case 18: draw_text(x,y-26,"4 JOGADORES"); break;//|
case 19: draw_text(x,y-26,"&lt; VOLTAR"); break;     //|
case 20: draw_text(x,y-26,"CODIGOS"); break;     //|
case 21: draw_text(x,y-26,"CAMERA"); break;     //|
case 22: draw_text(x,y-26,"MOVIMENTO"); break;     //|
case 23: draw_text(x,y-26,"JOAO"); break;     //|
}                                             //|
// ---------------------------------------------|
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>192,192</point>
  </PhysicsShapePoints>
</object>
